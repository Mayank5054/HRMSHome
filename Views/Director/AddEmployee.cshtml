
@using HRMS.Models
@model Employee
@{ 
    int userId = int.Parse(Session["userId"].ToString());
}
@if (ViewBag.EmployeeExists != "")
{
    <script>
                    $.notify("@ViewBag.EmployeeExists", "error");
    </script>
}
@if (ViewBag.SomethingWrong != "")
{
    <script>
                    $.notify("@ViewBag.SomethingWrong", "error");
    </script>
}

@*@if (TempData["NewEmployeeAdded"] != "")
    {
        <script>
                        $.notify("@TempData["NewEmployeeAdded"]", "success");
        </script>
    }

    @if (TempData["SomethingWrong"] != "")
    {
        <script>
                        $.notify("@TempData["SomethingWrong"]", "success");
        </script>
    }*@
<p>
    <h3>Add Employee</h3>
</p>
@using (Html.BeginForm("AddEmployee", "Director", FormMethod.Post))
{
    @*@Html.TextBoxFor(x => x.Email);
            <br />
            @Html.TextBoxFor(x => x.Password);
            <br />
            @Html.TextBoxFor(x => x.FirstName);
            <br />
            @Html.TextBoxFor(x => x.LastName);
            <br />

            <br />
            @Html.TextBoxFor(m => m.BirthDate, "{0:yyyy-MM-dd}", new { type = "date", })
            <br />
            @Html.RadioButtonFor(m => m.Gender, "M", new { @class = "" })
            @Html.LabelFor(m => m.Gender, "Male")
            @Html.RadioButtonFor(m => m.Gender, "F", new { @class = "ms-3" })
            @Html.LabelFor(m => m.Gender, "Female")
            <br />
            @Html.DropDownListFor(
            m => m.DepartmentId,
            new SelectList(ViewBag.roles, "Value", "Text")
            );

            @Html.DropDownListFor(
        m => m.ReportingPerson,
        new SelectList(ViewBag.reportingPersons, "Value", "Text")
        );*@

    <div class="form-floating mt-3 mb-3">

        @Html.TextBoxFor(model => model.Email, new { id = "Email", @class = "form-control", style = "max-width:100%;height:50px !important",placeholder="" })
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>
    <div class="form-floating mt-3 mb-3 ">

        @Html.TextBoxFor(model => model.Password, new { @class = "form-control", style = "max-width:100%;height:50px !important", placeholder = "" })
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
    </div>
    <div class="form-floating mt-3 mb-3 ">

        @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", style = "max-width:100%;height:50px !important", placeholder = "" })
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
    </div>
    <div class="form-floating mt-3 mb-3 ">

        @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", style = "max-width:100%;height:50px !important", placeholder = "" })
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
    </div>
    <div class="form-floating mt-3 mb-3 ">

        <input type="date" name="BirthDate" class="form-control" style="height:50px !important"/>
        <label class="control-label"> Date Of Birth</label>
        @*@Html.TextBoxFor(model => model.BookTitle, new { @class = "form-control", style = "max-width:100%" })*@
        @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
    </div>
    <div class=" mt-3 mb-3">
        @Html.RadioButtonFor(m => m.Gender, "M", new { @class = "" })
        @Html.LabelFor(m => m.Gender, "Male")
        @Html.RadioButtonFor(m => m.Gender, "F", new { @class = "ms-3" })
        @Html.LabelFor(m => m.Gender, "Female")
        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
    </div>
    <div class="form-floating mt-3 mb-3">

        @Html.DropDownListFor(model => model.DepartmentId,
          new SelectList(ViewBag.roles, "Value", "Text"),
          new { @class = "form-control",@id="Department",style="height:50px !important" })
        @Html.LabelFor(model => model.DepartmentId, htmlAttributes: new
{
@class = "control"
})
    </div>
    <div class="form-floating mt-3 mb-3">

        @Html.DropDownListFor(model => model.ReportingPerson,
          new SelectList(ViewBag.reportingPersons, "Value", "Text"),
          new { @class = "form-control", @id = "Reporting", style = "height:50px !important" })
        @Html.LabelFor(model => model.ReportingPerson, htmlAttributes: new
{
 @class = "control"
})
    </div>
    <button type="submit" class="btn btn-success">Add New User</button>
}

@section Scripts{
    <script>
        $(document).ready(function () {
            $("#Reporting").empty();
            $("#Reporting")
                .append($('<option ></option>')
                    .attr('value', "1").text("Mayank Sheladiya"));
        })
    </script>
    <script>
        $("#Department").change(function (e) {
            var id = $(this).val();
            console.log(id);
            $.ajax({
                method: "GET",
                url: "./GetReportingPersons/" + id,
                success: (data) => {
                    const jsonData = JSON.parse(data.reportingPersons);
                    $("#Reporting").empty();
                    if (jsonData.length == 0) {
                        $("#Reporting")
                            .append($('<option ></option>')
                                .attr('value', "1").text("Mayank Sheladiya"));
                    }
                    else {
                        jsonData.forEach((data) => {
                            console.log(data);
                          
                                $("#Reporting")
                                    .append($('<option ></option>')
                                        .attr('value', data.Value).text(data.Text));
                                console.log(data);
                           
                           
                        })
                    }
                   
                    console.log(jsonData);
                    console.log(data);
                },
                error: (err) => {
                    console.log(err);
                }
             
            })
        })
    </script>
    }