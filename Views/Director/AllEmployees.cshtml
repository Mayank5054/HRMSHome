
@using HRMS.Models;
@model List<Employee>

@{ 
    int userId = int.Parse(Session["userId"].ToString());
    string userName = (string)Session["userName"];
}
@if (TempData["LogInAsUser"] != null)
{
    <script>
        $.notify("@TempData["LogInAsUser"]", "success");
        @{TempData["logInAsUser"] = null;
        }
    </script>
}

@if (TempData["NewEmployeeAdded"] != null)
{
    <script>
        $.notify("@TempData["NewEmployeeAdded"]", "success");

            @{TempData["NewEmployeeAdded"] = null;}

    </script>
}
@if (TempData["EmployeeEdited"] != null)
{
    <script>
        $.notify("@TempData["EmployeeEdited"]", "success");

            @{TempData["EmployeeEdited"] = null;
            }

    </script>
}
@if (TempData["EmployeeDeleted"] != null)
{
    <script>
        $.notify("@TempData["EmployeeDeleted"]", "success");

            @{TempData["EmployeeDeleted"] = null;
            }

    </script>
}

@if (ViewBag.NewEmployeeAdded != "")
{
    <script>
        $.notify("@ViewBag.NewEmployeeAdded", "success");
    </script>
}
<p>
    <h3> All Employees </h3>
</p>
<script>
    console.log("Hello world");
    function openModal(id) {
        $("#yesDelete").attr("onclick", `deleteProduct(${id})`)
    }
    function deleteProduct(id) {
        console.log($(this))
        $.ajax({
            method: "GET",
            url: "/Director/DeleteEmployee/" + id,
            success: function (data) {
                console.log($(this))
                console.log(data);
                if (data.status == "Success") {
                    $(`#${id}`).remove();
                    $("#noDelete").click();

                    $.notify(data.message, "success");
                }
                else {
                    $("#noDelete").click();
                    $.notify(data.message, "error");
                }
            },
            error: function (data) {
                $("#noDelete").click();
                $.notify("Something Went Wrong", "error");
                console.log("Error Occured");
            }
        })
    }
</script>
<table class="table table-bordered" id="tableOfEmployee">
    <thead>
        <tr>
            <th>Expand</th>
            <th>Employee Name</th>
            <th>Birth-date</th>
            <th>Gender</td>
            <th>Role</th>
            <th>Reporting Person</th>
            <th>
                Edit
            </th>
            <th>
                Delete
            </th>
            <th>Chat</th>
        </tr>
    </thead>
    <tbody>

        @foreach (Employee i in Model)
        {
            <tr id="@i.EmployeeId">
                <td><button class="btn btn-circle btn-danger" onclick="expandData(this,@i.EmployeeId)">^</button></td>

                <td>@i.FirstName @i.LastName</td>
                <td>@i.BirthDate.Value.ToShortDateString()</td>
                @if (i.Gender == "M")
                {
                    <td>Male</td>
                }
                else
                {
                    <td>Female</td>
                }

                <td>@i.Role.Name</td>
                <td>@i.Employee2.FirstName @i.Employee2.LastName</td>

                <td>
                    @Html.ActionLink("Edit", "EditEmployee", "Director",
                       new { id = @i.EmployeeId }, new { @class = "btn btn-primary" })

                </td>
                <td>
                    <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#myModal" onclick="openModal(@i.EmployeeId)">
                        Delete
                    </button>
                    @*@Html.ActionLink("Delete", "DeleteEmployee", "Director",
                    new { id = @i.EmployeeId }, new { @class = "btn btn-danger" })*@
                </td>
                <td>
                    <button data-bs-toggle="modal" ,
                            data-bs-target="#chatModel"
                            class="btn btn-outline-primary" onclick="openChatModel(@i.EmployeeId)">
                        Click to Chat
                    </button>
                </td>
            </tr>

        }
    </tbody>
</table>

<div class="modal" id="myModal">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">


            <div class="modal-body" style="height:200px;width:500px">
                <p class="h3 p-3">Are You Sure ?</p>
                <p>
                    <button class="btn btn-success" id="yesDelete">Yes</button>
                    <button class="btn btn-info" data-bs-dismiss="modal" id="noDelete">No</button>
                </p>

            </div>

        </div>
    </div>
</div>
<div class="modal" id="chatModel">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body" style="min-height:200px;width:500px">
                <div id="chatHistoryDiv">

                </div>
        
                <div class="form-floating mt-3 mb-3 w-50 d-flex">
                    <input type="text" class="form-control" id="message" />
                    <button class="btn btn-primary ms-3" id="sendMessage">Send</button>
                </div>
               
            </div>
        </div>
    </div>
</div>
<script>
   $("#tableOfEmployee").DataTable({
        columns: [
            { data: "Expand" },
            { data: "EmployeeName" },
            { data: "BirthDate" },
            { data: "Gender" },
            { data: "Role" },
            { data: "ReportingPerson" }, 
            { data: "Edit" },
            { data:"Delete" },
            {data:"Chat"},
        ]
    });
</script>
<script>
    function expandData(e, id) {


        $(e).css("transform", "rotate(180deg)");
        console.log();
        if ($("#table" + id).length == 0) {
            $.ajax({
                method: "GET",
                url: "/AJAX/GetTaskByEmployeeId/" + id,
                success: function (data) {
                    var jsonData = JSON.parse(data.data);
                    var prepareTaskTable = "";
                    jsonData.forEach(function (i) {
                        prepareTaskTable += `
<tr >
<td> ${i.TaskDate} </td>
<td> ${i.TaskName} </td>
<td> ${i.TaskDescription} </td>
<td>${i.Approver}</td>
<td>${i.ApprovedBy}</td>
<td>${i.ApprovedOn}</td>
<td> ${i.Status} </td>
</tr>
`
                    });
                    let tr = $(e).closest("tr");

                    console.log(tr);
                    let row = $("#tableOfEmployee").DataTable().row(tr);

                    let childTable = $(`
                        <table class="table " id="table${id}">
                          <thead>
                            <tr>
                            <th>Task Date</th>
                              <th>Task Name</th>
                              <th>Task Description</th>
                              <th>Approver</th>
                              <th>Approved By </th>
                              <th>Approved On </th>
                              <th>Status</th>
                            </tr>
                          </thead>
                          <tbody>
                          ${prepareTaskTable}
                          </tbody>
                        </table>`);

                    row.child(childTable).show();
                    //               var boilterPlate = `

                    //   <div id="div${id}" class="table-responsive container-fluid">
                    //   <table class="table table-hover table-bodered" id="table${id}" >
                    //   <thead>
                    //   <tr>
                    //   <th>Task Date</th>
                    //   <th>Task Name</th>
                    //   <th>Task Description</th>
                    //   <th>Status</th>
                    //   </tr>
                    //   </thead>
                    //   <tbody>
                    //`;

                    //               boilterPlate = boilterPlate + prepareTaskTable + `</tbody</table></div>`;

                    /*   $("#" + id).after(boilterPlate);*/
                    $("#table" + id).DataTable({
                        columns: [
                            {
                                data: "TaskDate",
                                render: function (data, type, row) {
                                    return getFormattedDate(data);
                                }
                            },
                            { data: "TaskName" },
                            { data: "TaskDescription" },
                            {
                                data: "Approver", name: "Approver"
                            },
                            {
                                data: "ApprovedBy", name: "ApprovedBy", searchable: false,
                                orderable: false
                            },
                            {
                                data: "ApprovedOn",
                                name: "ApprovedOn",
                                render: function (data, type, row) {
                                    return getFormattedDate(data);
                                }
                            },
                            {
                                data: "Status",
                                render: function (data, type, row) {
                                    if (data == "Approved") {
                                        labelColorClass = "label-success";
                                    }
                                    else if (data == "Rejected") {
                                        labelColorClass = "label-danger";
                                    }
                                    else {
                                        labelColorClass = "label-warning";
                                    }
                                    return `<span class='label ${labelColorClass}'>${data}</span>`
                                }
                            }
                        ]

                    });
                    console.log(jsonData);
                },
                error: function (data) {
                }
            })
        }
        else {
            console.log("hidden");
            $(e).css("transform", "rotate(0deg)");
            $('#table' + id).DataTable().destroy();
            $("#" + id).next().remove();
        }

    }

    function getFormattedDate(data) {
        console.log(data);
        if (data == null) {
            return "";
        }
        if (/^\/Date\(\d+\)\/$/.test(data)) {
            var ob = data;
            var timestamp = parseInt(ob.replace("/Date(", "").replace(")/", ""));
            var purchaseDate = new Date(timestamp);
            var year = purchaseDate.getFullYear();
            var month = ('0' + (purchaseDate.getMonth() + 1)).slice(-2);
            var day = ('0' + purchaseDate.getDate()).slice(-2);
            var formattedDate = day + '/' + month + '/' + year;
            return formattedDate
        }
        var inputDate = data;
        var date = new Date(inputDate);
        var day = date.getDate();
        var month = date.getMonth() + 1; // January is 0, so we add 1
        var year = date.getFullYear();
        var formattedDate = (day < 10 ? '0' : '') + day + '/' + (month < 10 ? '0' : '') + month + '/' + year;
        return formattedDate;
    }
</script>
<script>
    var socket = new WebSocket("ws://localhost:5355?userId="+@userId);

    socket.onopen = function () {
        console.log("WebSocket connected");
    };

    socket.onmessage = function (event) {
        console.log(event);
        jsonData = JSON.parse(event.data);
        $.notify(`${jsonData.sender} has sended a message`,"info");
        $("#chatHistory").append(`
                <div>
    <p class="p-3 " style="text-align:left  "><b> ${jsonData.sender} :</b > ${ jsonData.message }</p>
</div>`);
        
        console.log("Received message: " + event.data);
    };

    socket.onclose = function () {
        console.log("WebSocket closed");
    };

    function sendMessage(id) {
        const message = $("#message").val();
        $("#chatHistory").append(`
        <div>
    <p class="p-3 " style="text-align:right  "><b> @userName :</b>   ${message}</p>
</div>
        `);
        socket.send(
        JSON.stringify({
             id: id,
            sender: "@userName",
  senderId:"@userId",
            message: message
        })
        );
    }
    function openChatModel(id) {
        $("#chatHistoryDiv").empty();
        $.ajax({
            method: "GET",
            url: "/Partial/GetChat/" + id,
            success: function (data) {
                $("#chatHistoryDiv").append(data);
            },
            error: function (data) {

            }
        })
        $("#sendMessage").attr("onclick", `sendMessage(${id})`);
    }

</script>
