@using HRMS.Models
@model Employee
@if (ViewBag.EmployeeMissing != "")
{
    <script>
        $.notify("@ViewBag.EmployeeMissing", "success");
    </script>
}
<p><h3>Edit Employee Details</h3></p>

@using (Html.BeginForm("EditEmployee", "Director", FormMethod.Post))
{
    @Html.TextBoxFor(x => x.EmployeeId, new { type = "hidden" })
    @*@Html.TextBoxFor(x => x.Email);
            <br />
            @Html.TextBoxFor(x => x.Password);
            <br />
            @Html.TextBoxFor(x => x.FirstName);
            <br />
            @Html.TextBoxFor(x => x.LastName);
            <br />

            <br />
            @Html.TextBoxFor(m => m.BirthDate, "{0:yyyy-MM-dd}", new { type = "date", })
            <br />
            @Html.RadioButtonFor(m => m.Gender, "M", new { @class = "" })
            @Html.LabelFor(m => m.Gender, "Male")
            @Html.RadioButtonFor(m => m.Gender, "F", new { @class = "ms-3" })
            @Html.LabelFor(m => m.Gender, "Female")
            <br />
            @Html.DropDownListFor(
            m => m.DepartmentId,
            new SelectList(ViewBag.roles, "Value", "Text")
            );

            @Html.DropDownListFor(
        m => m.ReportingPerson,
        new SelectList(ViewBag.reportingPersons, "Value", "Text")
        );
    *@

    <div class="form-floating mt-3 mb-3">

        @Html.TextBoxFor(model => model.Email, new { id = "Email", @class = "form-control", style = "max-width:100%;height:50px;",placeholder="" })
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>
    <div class="form-floating mt-3 mb-3 ">

        @Html.TextBoxFor(model => model.Password, new { @class = "form-control", style = "max-width:100%;height:50px;", placeholder = "" })
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
    </div>
    <div class="form-floating mt-3 mb-3 ">

        @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", style = "max-width:100%;height:50px;", placeholder = "" })
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
    </div>
    <div class="form-floating mt-3 mb-3 ">

        @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", style = "max-width:100%;height:50px;", placeholder = "" })
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
    </div>
    <div class="form-floating mt-3 mb-3 ">

        @*<input type="date" name="BirthDate" class="form-control" />*@
        @Html.TextBoxFor(m => m.BirthDate, "{0:yyyy-MM-dd}", new
   {
       type = "date",
       @class = "form-control",
       style="height: 50px;"
        })
        <label class="control-label"> Create Date</label>
        @*@Html.TextBoxFor(model => model.BookTitle, new { @class = "form-control", style = "max-width:100%" })*@
        @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
    </div>
    <div class="mt-3 mb-3">
        @Html.RadioButtonFor(m => m.Gender, "M", new { @class = "" })
        @Html.LabelFor(m => m.Gender, "Male")
        @Html.RadioButtonFor(m => m.Gender, "F", new { @class = "ms-3" })
        @Html.LabelFor(m => m.Gender, "Female")
        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
    </div>
    <div class="form-floating mt-3 mb-3">

        @Html.DropDownListFor(model => model.DepartmentId,
          new SelectList(ViewBag.roles, "Value", "Text"),
          new { @class = "form-control",@id= "Department", style = "height: 50px;" })
        @Html.LabelFor(model => model.DepartmentId, htmlAttributes: new
   {
       @class = "control"
      
   })
    </div>
    <div class="form-floating mt-3 mb-3">

        @Html.DropDownListFor(model => model.ReportingPerson,
          new SelectList(ViewBag.reportingPersons, "Value", "Text"),
          new { @class = "form-control",@id="Reporting", style = "height: 50px;" })
        @Html.LabelFor(model => model.ReportingPerson, htmlAttributes: new
{
 @class = "control"
})
    </div>

    <button type="submit" class="btn btn-info">Edit User</button>
}
@section Scripts{
    
    <script>
        $(document).ready(function () {
            var id = $("#Department").val();
            if (id == 1) {
                $("#Reporting").empty();
                $("#Reporting")
                    .append($('<option ></option>')
                        .attr('value', "1").text("Mayank Sheladiya"));
            }
            else {
                makeAnAjaxCall(id);
            }
         

        })
        $("#Department").change(function (e) {
            var id = $(this).val();
            makeAnAjaxCall(id);
        })

        function makeAnAjaxCall(id) {
            $.ajax({
                method: "GET",
                url: "/Director/GetReportingPersons/" + id,
                success: (data) => {
                    const jsonData = JSON.parse(data.reportingPersons);
                    $("#Reporting").empty();
                    if (jsonData.length == 0) {
                        $("#Reporting")
                            .append($('<option ></option>')
                                .attr('value', "1").text("Mayank Sheladiya"));
                    }
                    else {
                        jsonData.forEach((data) => {

                            $("#Reporting")
                                .append($('<option ></option>')
                                    .attr('value', data.Value).text(data.Text));
                            console.log(data);
                        })
                    }

                    console.log(jsonData);
                    console.log(data);
                },
                error: (err) => {
                    console.log(err);
                }

            })
        }
    </script>
}